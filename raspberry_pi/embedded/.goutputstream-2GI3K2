from db import upload_video
import camera
import globals
import cv2 as cv
import subprocess
import time
import threading
import asyncio
from tracker import Tracker
import os


async def record():
	try:
		globals.uploaded_video = False
		
		file_path = f'/home/pi/Desktop/videos/{globals.current_user}/{globals.session_id}'
		if not os.path.exists(file_path):
			os.makedirs(file_path)
		
		tracker = Tracker(output_path=f"{file_path}/{globals.video_count}.mp4", encoding="h264")
		
		# asyncio.get_event_loop().run_until_complete(tracker.start_tracking())
		
		(tracker.start_tracking())
		upload_video(f"{file_path}/{globals.video_count}.mp4")
		globals.uploaded_video = True
		
		globals.video_count += 1
	except Exception as e:
		print(e)


def start():
	print("\n- RUNNING PROGRAM")	
	
	# whil either session is in progress or video has not been uploaded
	while globals.session_in_progress:
		try:
			print(f"Trying to record video number: {globals.video_count}")
			asyncio.run(record())
		except Exception as e:
			print(f"Exception: {e}")
			raise RuntimeError("Problem with record and upload, aborting")
